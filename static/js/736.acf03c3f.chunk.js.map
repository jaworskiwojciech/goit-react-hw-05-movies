{"version":3,"file":"static/js/736.acf03c3f.chunk.js","mappings":"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","sources":["API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '53f1b4aea2aa13d93041449bfff0a14b';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesWithQuery = async query => {\n  const searchParams = new URLSearchParams({\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n    query: query,\n    api_key: API_KEY,\n  });\n\n  const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReview = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  list-style: none;\n\n  > li {\n    flex-basis: calc((100% - 6 * (10px)) / 7);\n    border-radius: 5px;\n    background-color: #ffffff;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.08), 0px 3px 3px rgba(0, 0, 0, 0.02),\n      1px 3px 4px rgba(0, 0, 0, 0.08);\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  // height: 100%;\n  height: 304px;\n  display: block;\n  object-fit: contain;\n  border-radius: 5px;\n\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  padding-top: 12px;\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-bottom: 12px;\n  text-align: center;\n`;\n\nexport const Role = styled.p`\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-bottom: 12px;\n  text-align: center;\n`;\n\nexport const Info = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  padding-top: 12px;\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-bottom: 12px;\n  color: var(--primary-text-color);\n  text-transform: uppercase;\n  line-height: 1.16;\n  text-align: center;\n`;\n","import { fetchMovieCast } from 'API';\nimport { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { CastList, Image, Name, Role } from './Cast.styled';\n\nconst DEFAULT_PROFILE_URL =\n  'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCast();\n\n    async function fetchCast() {\n      setIsLoading(true);\n      try {\n        const responseMovie = await fetchMovieCast(movieId);\n\n        if (responseMovie.length === 0) {\n          const error = new Error(\n            'Sorry, there is no info about movie you are searching for.'\n          );\n          setError(error);\n          return;\n        }\n        setMovieCast(responseMovie);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {error && Notify.failure(`${error.message}`)}\n      {isLoading && <Loader />}\n      <CastList>\n        {movieCast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <Image\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w154/${profile_path}`\n                  : DEFAULT_PROFILE_URL\n              }\n              alt={name}\n              width={154}\n            />\n            <Name>{name}</Name>\n            <Role>{character}</Role>\n          </li>\n        ))}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesWithQuery","_ref2","_callee2","query","searchParams","_context2","URLSearchParams","include_adult","language","page","api_key","_x","fetchMovieDetails","_ref3","_callee3","id","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReview","_ref5","_callee5","_context5","_x4","CastList","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","_templateObject3","Name","_templateObject4","Role","_templateObject5","_templateObject6","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","movieId","useParams","useEffect","_fetchCast","responseMovie","_error","length","Error","t0","finish","fetchCast","_jsxs","_Fragment","children","Notify","message","_jsx","Loader","map","profile_path","name","character","src","alt","width"],"sourceRoot":""}