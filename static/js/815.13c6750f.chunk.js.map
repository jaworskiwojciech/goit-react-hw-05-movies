{"version":3,"file":"static/js/815.13c6750f.chunk.js","mappings":"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","sources":["API.js","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.styled.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '53f1b4aea2aa13d93041449bfff0a14b';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesWithQuery = async query => {\n  const searchParams = new URLSearchParams({\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n    query: query,\n    api_key: API_KEY,\n  });\n\n  const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReview = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesItem = styled.li`\n  flex-basis: calc((100% - 3 * (30px)) / 4);\n  border-radius: 5px;\n  background-color: #ffffff;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.08), 0px 3px 3px rgba(0, 0, 0, 0.02),\n    1px 3px 4px rgba(0, 0, 0, 0.08);\n\n  transition: box-shadow var(--transition), transform var(--transition);\n  &:hover,\n  &:focus {\n    box-shadow: var(--card-shadow);\n    transform: scale(1.02);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  display: block;\n  object-fit: cover;\n  border-radius: 5px;\n\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    border-bottom-left-radius: 0px;\n    border-bottom-right-radius: 0px;\n  }\n`;\n\nexport const Info = styled.p`\n  height: 36px;\n  font-weight: 500;\n  font-size: 14px;\n  padding-top: 12px;\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-bottom: 12px;\n  color: var(--primary-text-color);\n  text-transform: uppercase;\n  line-height: 1.16;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Image, Info, ItemLink, MoviesItem } from './MoviesListItem.styled';\n\nconst DEFAULT_POSTER_URL =\n  'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\nconst MoviesListItem = ({ id, url, title }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesItem>\n      <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n        <Image\n          src={\n            url ? `https://image.tmdb.org/t/p/w342/${url}` : DEFAULT_POSTER_URL\n          }\n          alt={title}\n          loading=\"lazy\"\n        />\n        <Info>{title}</Info>\n      </ItemLink>\n    </MoviesItem>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string,\n};\n\nexport default MoviesListItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <MoviesListItem key={id} id={id} title={title} url={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 15px;\n  font-size: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchPopularMovies } from '../API';\nimport { Notify } from 'notiflix';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchTrendingMovies();\n\n    async function fetchTrendingMovies() {\n      setIsLoading(true);\n      try {\n        const responseMovies = await fetchPopularMovies();\n        setMovies(responseMovies);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, []);\n\n  return (\n    <main>\n      {error && Notify.failure(`${error.message}`)}\n      <Title>Trending today</Title>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesWithQuery","_ref2","_callee2","query","searchParams","_context2","URLSearchParams","include_adult","language","page","api_key","_x","fetchMovieDetails","_ref3","_callee3","id","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReview","_ref5","_callee5","_context5","_x4","MoviesItem","styled","_templateObject","_taggedTemplateLiteral","ItemLink","Link","_templateObject2","Image","_templateObject3","Info","_templateObject4","url","title","location","useLocation","_jsx","children","_jsxs","to","state","from","src","alt","loading","List","movies","map","poster_path","MoviesListItem","Title","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","_fetchTrendingMovies","responseMovies","t0","finish","fetchTrendingMovies","Notify","message","Loader","MoviesList"],"sourceRoot":""}