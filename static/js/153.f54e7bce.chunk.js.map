{"version":3,"file":"static/js/153.f54e7bce.chunk.js","mappings":"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","sources":["API.js","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MoviesDetails.styled.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '53f1b4aea2aa13d93041449bfff0a14b';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesWithQuery = async query => {\n  const searchParams = new URLSearchParams({\n    include_adult: false,\n    language: 'en-US',\n    page: 1,\n    query: query,\n    api_key: API_KEY,\n  });\n\n  const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReview = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 20px;\n  padding-bottom: 26px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  border-radius: 5px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  > h1 {\n    font-size: 30px;\n  }\n\n  > p {\n    max-width: 800px;\n    font-size: 16px;\n    color: var(--primary-text-color);\n  }\n\n  > h3 {\n    font-size: 20px;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  margin-top: 15px;\n  text-align: center;\n\n  > h3 {\n    margin-bottom: 15px;\n  }\n  > ul {\n    margin-top: 10px;\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const AddLink = styled(Link)`\n  text-decoration: none;\n  display: block;\n  margin-bottom: 15px;\n  outline: 1px solid var(--accent-color);\n\n  border-radius: 5px;\n  width: 60px;\n  padding: 4px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 14px;\n  color: black;\n\n  transition: transform var(--transition), background-color var(--transition);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    background-color: var(--accent-color);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet } from 'react-router-dom';\nimport { AddInfo, AddLink, Image, Info, Wrap } from './MovieCard.styled';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nconst DEFAULT_POSTER_URL =\n  'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\nconst MovieCard = ({ info }) => {\n  const { title, poster_path, vote_average, overview, genres } = info;\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n    : DEFAULT_POSTER_URL;\n\n  const getGenres = genres => {\n    if (genres) {\n      const genresList = genres.map(genre => genre.name).join(', ');\n      return genresList;\n    }\n    return;\n  };\n\n  const vote = Math.round(vote_average * 10);\n\n  return (\n    <main>\n      <Wrap>\n        <Image src={posterUrl} alt={title} width={342} />\n        <Info>\n          <h1>{title}</h1>\n          <p>User Score: {vote}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{getGenres(genres)}</p>\n        </Info>\n      </Wrap>\n      <AddInfo>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <AddLink to=\"cast\">Cast</AddLink>\n          </li>\n          <li>\n            <AddLink to=\"reviews\">Reviews</AddLink>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </AddInfo>\n    </main>\n  );\n};\n\nMovieCard.propTypes = {\n  info: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  display: block;\n  margin-bottom: 20px;\n  outline: 1px solid var(--accent-color);\n  // background-color: var(--accent-color);\n  border-radius: 5px;\n  width: 60px;\n  padding: 4px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 14px;\n  color: black;\n\n  transition: transform var(--transition), background-color var(--transition);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    // color: #ffffff;\n    background-color: var(--accent-color);\n  }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Navigate, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'API';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { BackLink } from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchhMoviesInfo();\n    async function fetchhMoviesInfo() {\n      setIsLoading(true);\n      try {\n        const responseMovie = await fetchMovieDetails(movieId);\n\n        if (responseMovie.length === 0) {\n          const error = new Error(\n            'Sorry, there is no info about movie you are searching for.'\n          );\n          setError(error);\n          return;\n        }\n        setMovieDetails(responseMovie);\n      } catch (error) {\n        console.log('error', error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Navigate to=\"/404\" />}\n      {/* {error && Notify.failure(`${error.message}`)} */}\n      <BackLink to={backLinkHref.current}>Back</BackLink>\n      {isLoading && <Loader />}\n      <MovieCard info={movieDetails} />\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","abrupt","data","results","stop","apply","arguments","fetchMoviesWithQuery","_ref2","_callee2","query","searchParams","_context2","URLSearchParams","include_adult","language","page","api_key","_x","fetchMovieDetails","_ref3","_callee3","id","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReview","_ref5","_callee5","_context5","_x4","Wrap","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","Info","_templateObject3","AddInfo","_templateObject4","AddLink","Link","_templateObject5","info","title","poster_path","vote_average","overview","genres","posterUrl","vote","Math","round","_jsxs","children","_jsx","src","alt","width","map","genre","name","join","getGenres","to","Suspense","fallback","Loader","Outlet","BackLink","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","_fetchhMoviesInfo","responseMovie","_error","length","Error","t0","console","log","finish","fetchhMoviesInfo","_Fragment","Navigate","current","MovieCard"],"sourceRoot":""}